{
  "permissions": {
    "allow": [
      "Bash(python:*)",
      "Bash(rm:*)",
      "Bash(sqlite3:*)",
      "Bash(source:*)",
      "WebFetch(domain:www.transfermarkt.us)",
      "WebFetch(domain:pooky.webflow.io)",
      "Bash(lsof:*)",
      "Bash(chmod:*)",
      "Bash(pkill:*)",
      "Bash(true)",
      "Bash(brew install:*)",
      "Bash(ngrok:*)",
      "Bash(echo:*)",
      "Bash(curl:*)",
      "Bash(pip3 install:*)",
      "Bash(DATABASE_URL=\"postgresql://postgres:WJFojeyIZjCfJlRscgARcdrFAqDXKJhT@ballast.proxy.rlwy.net:10971/railway\" python3 migrate_to_postgresql.py)",
      "Bash(DATABASE_URL=\"postgresql://postgres:WJFojeyIZjCfJlRscgARcdrFAqDXKJhT@ballast.proxy.rlwy.net:10971/railway\" timeout 30 python3 migrate_to_postgresql.py)",
      "WebFetch(domain:web-production-18fb.up.railway.app)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(ls:*)",
      "Bash(pip install:*)",
      "Bash(./venv/bin/python -c \"import flask; print(''Flask is installed'')\")",
      "Bash(./venv/bin/python:*)",
      "Bash(../../venv/bin/python:*)",
      "Bash(timeout:*)",
      "Bash(grep:*)",
      "Bash(for:*)",
      "Bash(do echo \"Processing $file\")",
      "Bash(done)",
      "Bash(docker compose:*)",
      "Bash(DATABASE_URL=\"postgresql://postgres:WJFojeyIZjCfJlRscgARcdrFAqDXKJhT@ballast.proxy.rlwy.net:10971/railway\" python3 -c \"\nimport psycopg2\nimport os\n\nrailway_url = os.environ.get(''DATABASE_URL'')\nconn = psycopg2.connect(railway_url)\nc = conn.cursor()\n\nprint(''ðŸ”§ ADDING MISSING COLUMNS TO RAILWAY SCHEMA'')\n\n# Add type column to competitions\nc.execute(''ALTER TABLE competitions ADD COLUMN IF NOT EXISTS type VARCHAR(50) DEFAULT %s'', (''domestic_league'',))\nprint(''âœ… Added type column to competitions'')\n\n# Update all existing competitions to be domestic_league type\nc.execute(''UPDATE competitions SET type = %s WHERE type IS NULL'', (''domestic_league'',))\nprint(''âœ… Updated competition types'')\n\n# Verify competitions\nc.execute(''SELECT name, type FROM competitions'')\ncomps = c.fetchall()\nprint(f''\\nðŸ“‹ Competitions in Railway:'')\nfor name, comp_type in comps:\n    print(f''  {name}: {comp_type}'')\n\nconn.commit()\nconn.close()\n\")",
      "Bash(docker logs:*)",
      "Bash(railway login:*)",
      "Bash(railway whoami:*)",
      "Bash(railway status:*)",
      "Bash(railway link:*)",
      "Bash(railway projects:*)",
      "Bash(railway help:*)",
      "Bash(railway list:*)",
      "Bash(railway deploy:*)",
      "Bash(railway service:*)",
      "Bash(railway up:*)",
      "Bash(railway status:*)",
      "Bash(railway ps:*)",
      "Bash(railway logs:*)",
      "Bash(brew services:*)",
      "Bash(export:*)",
      "Bash(createdb:*)",
      "Bash(cat:*)"
    ],
    "deny": []
  }
}